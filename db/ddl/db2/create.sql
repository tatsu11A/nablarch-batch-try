-- 投入先のDBを指定;
CONNECT TO SAMPLE2;
-- 一般ユーザのスキーマを指定;
SET SCHEMA sample;
CREATE TABLE BATCH_REQUEST (
  BATCH_REQUEST_ID VARCHAR(100) NOT NULL,
  BATCH_REQUEST_NAME VARCHAR(100) NOT NULL,
  PROCESS_HALT_FLG CHARACTER(1) NOT NULL,
  PROCESS_ACTIVE_FLG CHARACTER(1) NOT NULL,
  SERVICE_AVAILABLE CHARACTER(1) NOT NULL,
  RESUME_POINT BIGINT NOT NULL
);
COMMENT ON table BATCH_REQUEST is 'バッチリクエスト';
COMMENT ON column BATCH_REQUEST.BATCH_REQUEST_ID is 'バッチリクエストID';
COMMENT ON column BATCH_REQUEST.BATCH_REQUEST_NAME is 'リクエスト名';
COMMENT ON column BATCH_REQUEST.PROCESS_HALT_FLG is '処理停止フラグ';
COMMENT ON column BATCH_REQUEST.PROCESS_ACTIVE_FLG is 'アクティブフラグ';
COMMENT ON column BATCH_REQUEST.SERVICE_AVAILABLE is 'サービス提供可否状態';
COMMENT ON column BATCH_REQUEST.RESUME_POINT is 'レジュームポイント';
CREATE TABLE BUSINESS_DATE (
  SEGMENT_ID CHARACTER(2) NOT NULL,
  BIZ_DATE CHARACTER(8) NOT NULL
);
COMMENT ON table BUSINESS_DATE is '業務日付';
COMMENT ON column BUSINESS_DATE.SEGMENT_ID is 'セグメントID';
COMMENT ON column BUSINESS_DATE.BIZ_DATE is '業務日付';
CREATE TABLE CODE_NAME (
  CODE_ID CHARACTER(8) NOT NULL,
  CODE_VALUE VARCHAR(2) NOT NULL,
  LANG CHARACTER(2) NOT NULL,
  SORT_ORDER SMALLINT NOT NULL,
  CODE_NAME VARCHAR(50) NOT NULL,
  SHORT_NAME VARCHAR(50),
  OPTION01 VARCHAR(50),
  OPTION02 VARCHAR(50),
  OPTION03 VARCHAR(50),
  OPTION04 VARCHAR(50),
  OPTION05 VARCHAR(50),
  OPTION06 VARCHAR(50),
  OPTION07 VARCHAR(50),
  OPTION08 VARCHAR(50),
  OPTION09 VARCHAR(50),
  OPTION10 VARCHAR(50)
);
COMMENT ON table CODE_NAME is 'コード名称';
COMMENT ON column CODE_NAME.CODE_ID is 'コードID';
COMMENT ON column CODE_NAME.CODE_VALUE is 'コード値';
COMMENT ON column CODE_NAME.LANG is '言語';
COMMENT ON column CODE_NAME.SORT_ORDER is 'ソート順';
COMMENT ON column CODE_NAME.CODE_NAME is '名称';
COMMENT ON column CODE_NAME.SHORT_NAME is 'コード略称';
COMMENT ON column CODE_NAME.OPTION01 is 'オプション名称01';
COMMENT ON column CODE_NAME.OPTION02 is 'オプション名称02';
COMMENT ON column CODE_NAME.OPTION03 is 'オプション名称03';
COMMENT ON column CODE_NAME.OPTION04 is 'オプション名称04';
COMMENT ON column CODE_NAME.OPTION05 is 'オプション名称05';
COMMENT ON column CODE_NAME.OPTION06 is 'オプション名称06';
COMMENT ON column CODE_NAME.OPTION07 is 'オプション名称07';
COMMENT ON column CODE_NAME.OPTION08 is 'オプション名称08';
COMMENT ON column CODE_NAME.OPTION09 is 'オプション名称09';
COMMENT ON column CODE_NAME.OPTION10 is 'オプション名称10';
CREATE TABLE CODE_PATTERN (
  CODE_ID CHARACTER(8) NOT NULL,
  CODE_VALUE VARCHAR(2) NOT NULL,
  PATTERN01 CHARACTER(1) NOT NULL,
  PATTERN02 CHARACTER(1),
  PATTERN03 CHARACTER(1),
  PATTERN04 CHARACTER(1),
  PATTERN05 CHARACTER(1),
  PATTERN06 CHARACTER(1),
  PATTERN07 CHARACTER(1),
  PATTERN08 CHARACTER(1),
  PATTERN09 CHARACTER(1),
  PATTERN10 CHARACTER(1),
  PATTERN11 CHARACTER(1),
  PATTERN12 CHARACTER(1),
  PATTERN13 CHARACTER(1),
  PATTERN14 CHARACTER(1),
  PATTERN15 CHARACTER(1),
  PATTERN16 CHARACTER(1),
  PATTERN17 CHARACTER(1),
  PATTERN18 CHARACTER(1),
  PATTERN19 CHARACTER(1),
  PATTERN20 CHARACTER(1)
);
COMMENT ON table CODE_PATTERN is 'コードパターン';
COMMENT ON column CODE_PATTERN.CODE_ID is 'コードID';
COMMENT ON column CODE_PATTERN.CODE_VALUE is 'コード値';
COMMENT ON column CODE_PATTERN.PATTERN01 is 'パターン01';
COMMENT ON column CODE_PATTERN.PATTERN02 is 'パターン02';
COMMENT ON column CODE_PATTERN.PATTERN03 is 'パターン03';
COMMENT ON column CODE_PATTERN.PATTERN04 is 'パターン04';
COMMENT ON column CODE_PATTERN.PATTERN05 is 'パターン05';
COMMENT ON column CODE_PATTERN.PATTERN06 is 'パターン06';
COMMENT ON column CODE_PATTERN.PATTERN07 is 'パターン07';
COMMENT ON column CODE_PATTERN.PATTERN08 is 'パターン08';
COMMENT ON column CODE_PATTERN.PATTERN09 is 'パターン09';
COMMENT ON column CODE_PATTERN.PATTERN10 is 'パターン10';
COMMENT ON column CODE_PATTERN.PATTERN11 is 'パターン11';
COMMENT ON column CODE_PATTERN.PATTERN12 is 'パターン12';
COMMENT ON column CODE_PATTERN.PATTERN13 is 'パターン13';
COMMENT ON column CODE_PATTERN.PATTERN14 is 'パターン14';
COMMENT ON column CODE_PATTERN.PATTERN15 is 'パターン15';
COMMENT ON column CODE_PATTERN.PATTERN16 is 'パターン16';
COMMENT ON column CODE_PATTERN.PATTERN17 is 'パターン17';
COMMENT ON column CODE_PATTERN.PATTERN18 is 'パターン18';
COMMENT ON column CODE_PATTERN.PATTERN19 is 'パターン19';
COMMENT ON column CODE_PATTERN.PATTERN20 is 'パターン20';
CREATE TABLE MAIL_ATTACHED_FILE (
  MAIL_REQUEST_ID VARCHAR(20) NOT NULL,
  SERIAL_NUMBER NUMERIC(10) NOT NULL,
  FILE_NAME VARCHAR(150) NOT NULL,
  CONTENT_TYPE VARCHAR(50) NOT NULL,
  ATTACHED_FILE BLOB NOT NULL
);
COMMENT ON table MAIL_ATTACHED_FILE is 'メール添付ファイル';
COMMENT ON column MAIL_ATTACHED_FILE.MAIL_REQUEST_ID is 'メール送信要求ID';
COMMENT ON column MAIL_ATTACHED_FILE.SERIAL_NUMBER is '連番';
COMMENT ON column MAIL_ATTACHED_FILE.FILE_NAME is '添付ファイル名';
COMMENT ON column MAIL_ATTACHED_FILE.CONTENT_TYPE is '添付ファイルCONTENT-TYPE';
COMMENT ON column MAIL_ATTACHED_FILE.ATTACHED_FILE is '添付ファイル';
CREATE TABLE MAIL_RECIPIENT (
  MAIL_REQUEST_ID VARCHAR(20) NOT NULL,
  SERIAL_NUMBER BIGINT NOT NULL,
  RECIPIENT_TYPE CHARACTER(1) NOT NULL,
  MAIL_ADDRESS VARCHAR(254) NOT NULL
);
COMMENT ON table MAIL_RECIPIENT is 'メール送信先';
COMMENT ON column MAIL_RECIPIENT.MAIL_REQUEST_ID is 'メール送信要求ID';
COMMENT ON column MAIL_RECIPIENT.SERIAL_NUMBER is '連番';
COMMENT ON column MAIL_RECIPIENT.RECIPIENT_TYPE is '送信先区分';
COMMENT ON column MAIL_RECIPIENT.MAIL_ADDRESS is 'メールアドレス';
CREATE TABLE MAIL_REQUEST (
  MAIL_REQUEST_ID VARCHAR(20) NOT NULL,
  MAIL_SEND_PATTERN_ID VARCHAR(2),
  SUBJECT VARCHAR(150) NOT NULL,
  MAIL_BODY VARCHAR(4000) NOT NULL,
  MAIL_FROM VARCHAR(254) NOT NULL,
  REPLY_TO VARCHAR(254) NOT NULL,
  RETURN_PATH VARCHAR(254) NOT NULL,
  CHARSET VARCHAR(50) NOT NULL,
  STATUS CHARACTER(1) NOT NULL,
  REQUEST_DATETIME TIMESTAMP,
  SEND_DATETIME TIMESTAMP,
  PROCESS_ID CHARACTER(36)
);
COMMENT ON table MAIL_REQUEST is 'メール送信要求';
COMMENT ON column MAIL_REQUEST.MAIL_REQUEST_ID is 'メール送信要求ID';
COMMENT ON column MAIL_REQUEST.MAIL_SEND_PATTERN_ID is 'メール送信パターンID';
COMMENT ON column MAIL_REQUEST.SUBJECT is '件名';
COMMENT ON column MAIL_REQUEST.MAIL_BODY is '本文';
COMMENT ON column MAIL_REQUEST.MAIL_FROM is '送信者メールアドレス';
COMMENT ON column MAIL_REQUEST.REPLY_TO is '返信先メールアドレス';
COMMENT ON column MAIL_REQUEST.RETURN_PATH is '差戻し先メールアドレス';
COMMENT ON column MAIL_REQUEST.CHARSET is '文字セット';
COMMENT ON column MAIL_REQUEST.STATUS is 'ステータス';
COMMENT ON column MAIL_REQUEST.REQUEST_DATETIME is '要求日時';
COMMENT ON column MAIL_REQUEST.SEND_DATETIME is '送信日時';
COMMENT ON column MAIL_REQUEST.PROCESS_ID is 'プロセスID';
CREATE TABLE MAIL_TEMPLATE (
  MAIL_TEMPLATE_ID VARCHAR(10) NOT NULL,
  LANG CHARACTER(2) NOT NULL,
  SUBJECT VARCHAR(150) NOT NULL,
  MAIL_BODY LONG VARCHAR NOT NULL,
  CHARSET VARCHAR(50) NOT NULL
);
COMMENT ON table MAIL_TEMPLATE is 'メールテンプレート';
COMMENT ON column MAIL_TEMPLATE.MAIL_TEMPLATE_ID is 'メールテンプレートID';
COMMENT ON column MAIL_TEMPLATE.LANG is '言語';
COMMENT ON column MAIL_TEMPLATE.SUBJECT is '件名';
COMMENT ON column MAIL_TEMPLATE.MAIL_BODY is '本文';
COMMENT ON column MAIL_TEMPLATE.CHARSET is '文字セット';
CREATE TABLE SAMPLE_USER (
  USER_INFO_ID CHARACTER(20) NOT NULL,
  LOGIN_ID VARCHAR(20) NOT NULL,
  KANJI_NAME VARCHAR(50) NOT NULL,
  KANA_NAME VARCHAR(50) NOT NULL,
  STATUS CHARACTER(1) NOT NULL
);
COMMENT ON table SAMPLE_USER is 'サンプルユーザ情報';
COMMENT ON column SAMPLE_USER.USER_INFO_ID is 'ユーザ情報ID';
COMMENT ON column SAMPLE_USER.LOGIN_ID is 'ログインID';
COMMENT ON column SAMPLE_USER.KANJI_NAME is '漢字氏名';
COMMENT ON column SAMPLE_USER.KANA_NAME is 'かな氏名';
COMMENT ON column SAMPLE_USER.STATUS is 'ステータス';
ALTER TABLE BUSINESS_DATE
ADD CONSTRAINT PK_BUSINESS_DATE PRIMARY KEY
(
  SEGMENT_ID
);
ALTER TABLE SAMPLE_USER
ADD CONSTRAINT PK_SAMPLE_USER_INFO PRIMARY KEY
(
  USER_INFO_ID
);
ALTER TABLE MAIL_TEMPLATE
ADD CONSTRAINT PK_メールテンプレート PRIMARY KEY
(
  MAIL_TEMPLATE_ID,
  LANG
);
ALTER TABLE MAIL_ATTACHED_FILE
ADD CONSTRAINT PK_メール添付ファイル PRIMARY KEY
(
  MAIL_REQUEST_ID,
  SERIAL_NUMBER
);
ALTER TABLE MAIL_RECIPIENT
ADD CONSTRAINT PK_メール送信先 PRIMARY KEY
(
  MAIL_REQUEST_ID,
  SERIAL_NUMBER
);
ALTER TABLE MAIL_REQUEST
ADD CONSTRAINT PK_メール送信要求 PRIMARY KEY
(
  MAIL_REQUEST_ID
);
ALTER TABLE CODE_PATTERN
ADD CONSTRAINT SYS_C0058550 PRIMARY KEY
(
  CODE_ID,
  CODE_VALUE
);
ALTER TABLE CODE_NAME
ADD CONSTRAINT SYS_C0058560 PRIMARY KEY
(
  CODE_ID,
  CODE_VALUE,
  LANG
);
ALTER TABLE BATCH_REQUEST
ADD CONSTRAINT SYS_C0058579 PRIMARY KEY
(
  BATCH_REQUEST_ID
);
ALTER TABLE CODE_NAME
ADD
FOREIGN KEY (
  CODE_ID,
  CODE_VALUE
) REFERENCES CODE_PATTERN (
  CODE_ID,
  CODE_VALUE
);
ALTER TABLE MAIL_ATTACHED_FILE
ADD
FOREIGN KEY (
  MAIL_REQUEST_ID
) REFERENCES MAIL_REQUEST (
  MAIL_REQUEST_ID
);
ALTER TABLE MAIL_RECIPIENT
ADD
FOREIGN KEY (
  MAIL_REQUEST_ID
) REFERENCES MAIL_REQUEST (
  MAIL_REQUEST_ID
);
